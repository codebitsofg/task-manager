generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}
generator erd {
  provider = "prisma-erd-generator"
  output = "../ERD.svg"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id       Int               @id @default(autoincrement())
  username String
  email    String            @unique
  password String
  teams    EmployeeOnTeams[]
  tasks    Task[]
  projects Project[]
}

model Team {
  id       Int               @id @default(autoincrement())
  name     String
  members  EmployeeOnTeams[]
  projects Project[]
}

model EmployeeOnTeams {
  teamId     Int
  employeeId Int
  team       Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  employee   Employee @relation(fields: [employeeId], references: [id], onDelete: Cascade)

  @@id([teamId, employeeId])
}

model Project {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  tasks       Task[]
  teamId      Int
  employeeId  Int?
  team        Team      @relation(fields: [teamId], references: [id], onDelete: Cascade)
  employee    Employee? @relation(fields: [employeeId], references: [id], onDelete: Cascade)
}

model Task {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  priority    String
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  employee    Employee @relation(fields: [userId], references: [id], onDelete: Cascade)
  projectId   Int?
  project     Project? @relation(fields: [projectId], references: [id], onDelete: Cascade)
}
